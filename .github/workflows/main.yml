name: Portfolio ci
on: workflow_dispatch
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
    - name: Code checkout
      uses: actions/checkout@v4
      
    # - name: Use Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '14.x'
    # - run: npm ci
    # - run: npm run build --if-present
    # - run: npm test

    # - name: Checkstyle
    #   run: npm checkstyle:checkstyle

    # - name: SonarCloud Scan
    #   uses: sonarsource/sonarcloud-github-action@v2.2.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
    #   env:
    #     SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}

    # Setup java 17 to be default (sonar-scanner requirement as of 5.x)
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '17'
    # Setup sonar-scanner
    - name: Setup SonarQube
      uses: warchant/setup-sonar-scanner@v7
    
    # Run sonar-scanner
    # - name: SonarQube Scan
    #   run: sonar-scanner
    #     -Dsonar.host.url=${{ secrets.SONAR_URL }}
    #     -Dsonar.login=${{ secrets.SONAR_TOKEN }}
    #     -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
    #     -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
    #     -Dsonar.sources=src/
    #     -Dsonar.junit.reportsPath=target/surefire-reports/ 
    #     -Dsonar.jacoco.reportsPath=target/jacoco.exec 
    #     -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
    #   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

    - name: Analyze with SonarQube

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarqube-scan-action@v1.1.0
      uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
      with:
          # Additional arguments for the sonarcloud scanner
          args:
            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
            # mandatory
            -Dsonar.projectKey= learndevops13_brunda
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false

